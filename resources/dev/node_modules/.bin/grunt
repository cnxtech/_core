#!/usr/bin/env node

'use strict';

process.title = 'grunt';

var path = require('path');
///var tildify = require('tildify');
var interpret = require('interpret');
var v8flags = require('v8flags');
var chalk = require('chalk');
var Liftoff = require('liftoff');
var fs = require('fs');


// Especially badass external libs.
var findup = require('findup-sync');
var resolve = require('resolve').sync;

// Internal libs.
var options = require('../lib/cli').options;
var completion = require('../lib/completion');
var info = require('../lib/info');


/// radic
var tsPath = path.join(process.cwd(), 'Gruntfile.ts');
if ( fs.existsSync(tsPath) ) {
    process.argv.push('--gruntfile');
    process.argv.push(tsPath);
    //require('typescript-require');
}
var cli = new Liftoff({
    name: 'grunt',
    completions: completion,
    extensions: interpret.jsVariants,
    v8flags: v8flags,
    moduleName: 'grunt',
    configName: 'gruntfile'
});
cli.on('require', function(name) {
    console.log('Requiring external module', chalk.magenta(name));
});

cli.on('requireFail', function(name) {
    console.log(chalk.red('Failed to load external module'), chalk.magenta(name));
});



var basedir = process.cwd();
var gruntpath;


// Do stuff based on CLI options.
if ( 'completion' in options ) {
    completion.print(options.completion);
} else if ( options.version ) {
    info.version();
} else if ( options.gruntfile ) { //Note: if both `gruntfile` and `base` are set, use `gruntfile`
    basedir = path.resolve(path.dirname(options.gruntfile));
} else if ( options.base ) {
    basedir = path.resolve(options.base);
}


try {
    gruntpath = resolve('grunt', {basedir: basedir});
} catch (ex) {
    gruntpath = findup('lib/grunt.js');
    console.log(gruntpath);
    // No grunt install found!
    if ( ! gruntpath ) {
        if ( options.version ) {
            process.exit();
        }
        if ( options.help ) {
            info.help();
        }
        info.fatal('Unable to find local grunt.', 99);
    }
}



function handleArguments(env) {
   // console.log(require('util').inspect(env, {colors:true}));
    if (!env.modulePath) {
        console.log(
            chalk.red('Local gulp not found in')
        );
        console.log(chalk.red('Try running: npm install gulp'));
        process.exit(1);
    }

    if (!env.configPath) {
        console.log(chalk.red('No gulpfile found'));
        process.exit(1);
    }

    // Chdir before requiring gulpfile to make sure
    // we let them chdir as needed
    if (process.cwd() !== env.cwd) {
        process.chdir(env.cwd);
        console.log(
            'Working directory changed to',
            chalk.magenta(env.cwd)
        );
    }

    // This is what actually loads up the gulpfile
    require(env.configPath);
    //console.log('Using gulpfile', chalk.magenta(env.configPath));

    var gulpInst = require(env.modulePath);
    gulpInst.cli();
    //logEvents(gulpInst);
    //
    //process.nextTick(function() {
    //    if (simpleTasksFlag) {
    //        return logTasksSimple(env, gulpInst);
    //    }
    //    if (tasksFlag) {
    //        return logTasks(env, gulpInst);
    //    }
    //    gulpInst.start.apply(gulpInst, toRun);
    //});
}
cli.launch({
    cwd: process.cwd()
    //require: argv.require
}, handleArguments);
// Everything looks good. Require local grunt and run it.
//require(gruntpath).cli();
