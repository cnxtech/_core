<project name="codex" default="pre-commit">
    <property name="buildfile-version" value="1.0.0"/>
    <property name="vendordir" value="${project.basedir}/../../../vendor"/>
    <property name="phpdocfile" value="${project.basedir}/docs/structure.xml"/>

    <property name="package-dir" value="${project.basedir}/resources"/>
    <property name="package-bin-dir" value="${project.basedir}/resources/node_modules/.bin"/>
    <property name="typedoc" value="${package-bin-dir}/typedoc"/>
    <property name="sassdoc" value="${package-bin-dir}/sassdoc"/>

    <property name="sassfile" value="${project.basedir}/docs/sass.json"/>
    <property name="sassdir" value="${project.basedir}/resources/src/styles"/>

    <target name="clean" unless="clean.done" description="Cleanup build artifacts">
        <delete dir="${project.basedir}/vendor"/>
        <delete file="${project.basedir}/composer.lock"/>
        <property name="clean.done" value="true"/>
    </target>

    <target name="pre-commit" unless="pre-commit.done" depends="clean" description="Prepare for build">
        <phingcall target="lint"/>
        <phingcall target="phpcs"/>
        <phingcall target="phpdoc"/>
        <property name="pre-commit.done" value="true"/>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>

            <fileset dir="${project.basedir}/src">
                <include name="**/*.php"/>
            </fileset>
        </apply>
    </target>

    <target name="phpcbf" description="Fixes coding standard violations using PHP_CodeSniffer Fixer">
        <exec executable="phpcbf" logoutput="true">
            <arg value="--tabWidth=4"/>
            <arg value="--standard=PSR2"/>
            <arg value="--extensions=php"/>
            <arg value="--ignore=autoload.php"/>
            <arg path="${project.basedir}/src"/>
        </exec>
    </target>

    <target name="phpcs" depends="phpcbf" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs" logoutput="true">
            <arg value="--standard=PSR2"/>
            <arg value="--extensions=php"/>
            <arg value="--ignore=autoload.php"/>
            <arg path="${project.basedir}/src"/>
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit" logoutput="true">
            <arg value="--configuration"/>
            <arg path="${project.basedir}/phpunit.xml"/>
            <arg value="--bootstrap"/>
            <arg path="${vendordir}/autoload.php"/>
        </exec>
    </target>

    <target name="phpdoc" description="Generate phpdoc structure xml and move into docs folder">
        <exec executable="phpdoc" dir="${project.basedir}" logoutput="true">
            <arg line="-t phpdoc"/>
            <arg line="-d src"/>
            <arg line="--template=xml"/>
        </exec>
        <move file="${project.basedir}/phpdoc/structure.xml" tofile="${phpdocfile}"/>
        <delete dir="${project.basedir}/phpdoc"/>
    </target>


    <target name="sassdoc" description="Generate sassdoc json output and move into docs folder">
        <delete file="${sassfile}" quiet="true"/>
        <exec command="${sassdoc} --parse ${sassdir} >> sass.json" dir="${package-dir}" logoutput="true"/>
        <move file="${package-dir}/sass.json" tofile="${sassfile}"/>
    </target>

    <target name="bower" description="Run bower to get the latest codex-theme">
        <exec command="bower install" dir="${project.basedir" logoutput="true"/>

    </target>
</project>
