<!--~
  ~ Part of the Codex Project packages.
  ~
  ~ License and copyright information bundled with this package in the LICENSE file.
  ~
  ~ @author Robin Radic
  ~ @copyright Copyright 2017 (c) Codex Project
  ~ @license http://codex-project.ninja/license The MIT License
  -->

<project name="codex/core" default="start">
    <property file="build.properties"/>

    <property name="tools.dir" value=""/>
    <property name="tools.ext" value=""/>
    <property name="vendor.dir" value="${project.basedir}/vendor"/>

    <!-- Check if jenkins or local, then take appropriate actions -->
    <if>
        <equals arg1="${env}" arg2="local"/>
        <then>
            <property name="vendor.dir" override="true" value="${project.basedir}/../../../vendor"/>
            <echo message="We're not on jenkins. Vendor dir: ${vendor.dir}"/>
            <import file="local.build.xml" description="Local tasks for in workbench"/>
        </then>
        <else>
            <property name="vendor.dir" override="true" value="${project.basedir}/vendor"/>
            <echo message="We're on jenkins. Vendor dir: ${vendor.dir}"/>
            <import file="vendor/laradic/phing/jenkins.xml" description="Jenkins tasks"/>
        </else>
    </if>

    <target name="start">
        <phingcall target="build" />
    </target>



    <target name="theme-clean" description="clean the theme files">
        <delete dir="${project.basedir}/resources/assets"/>
        <delete dir="${project.basedir}/node_modules"/>
    </target>
    <target name="theme-install" description="install the theme node module">
        <exec command="npm install" dir="${project.basedir}" logoutput="true" passthru="true"/>
    </target>
    <target name="theme-copy" description="copy the theme distribution files to assets" >
        <copy todir="${project.basedir}/resources/assets">
            <fileset dir="${project.basedir}/node_modules/codex-theme/dist/assets">
                <include name="**"/>
            </fileset>
        </copy>
    </target>
    <target name="theme">
        <phingcall target="theme-clean"/>
        <phingcall target="theme-install"/>
        <phingcall target="theme-copy"/>
    </target>

    <target name="theme-link-dist">
        <delete dir="${project.basedir}/resources/assets"/>
        <delete file="${project.basedir}/resources/assets"/>
        <exec command="npm link codex-theme" dir="${project.basedir}"  logoutput="true" passthru="true"/>
        <symlink target="node_modules/codex-theme/dist/assets" link="resources/assets" />
    </target>
    <target name="theme-link-dev">
        <delete dir="${project.basedir}/resources/assets"/>
        <delete file="${project.basedir}/resources/assets"/>
        <exec command="npm link codex-theme" dir="${project.basedir}"  logoutput="true" passthru="true"/>
        <symlink target="${project.basedir}/node_modules/codex-theme/dev/assets" link="${project.basedir}/resources/assets" />
    </target>

</project>
